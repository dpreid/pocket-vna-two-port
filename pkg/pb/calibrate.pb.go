// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: calibrate.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CalibrateOnePortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frequency []float64  `protobuf:"fixed64,1,rep,packed,name=frequency,proto3" json:"frequency,omitempty"`
	Result    []*Complex `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *CalibrateOnePortResponse) Reset() {
	*x = CalibrateOnePortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calibrate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalibrateOnePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalibrateOnePortResponse) ProtoMessage() {}

func (x *CalibrateOnePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calibrate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalibrateOnePortResponse.ProtoReflect.Descriptor instead.
func (*CalibrateOnePortResponse) Descriptor() ([]byte, []int) {
	return file_calibrate_proto_rawDescGZIP(), []int{0}
}

func (x *CalibrateOnePortResponse) GetFrequency() []float64 {
	if x != nil {
		return x.Frequency
	}
	return nil
}

func (x *CalibrateOnePortResponse) GetResult() []*Complex {
	if x != nil {
		return x.Result
	}
	return nil
}

type CalibrateTwoPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frequency []float64 `protobuf:"fixed64,1,rep,packed,name=frequency,proto3" json:"frequency,omitempty"`
	Result    *SParams  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CalibrateTwoPortResponse) Reset() {
	*x = CalibrateTwoPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calibrate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalibrateTwoPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalibrateTwoPortResponse) ProtoMessage() {}

func (x *CalibrateTwoPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calibrate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalibrateTwoPortResponse.ProtoReflect.Descriptor instead.
func (*CalibrateTwoPortResponse) Descriptor() ([]byte, []int) {
	return file_calibrate_proto_rawDescGZIP(), []int{1}
}

func (x *CalibrateTwoPortResponse) GetFrequency() []float64 {
	if x != nil {
		return x.Frequency
	}
	return nil
}

func (x *CalibrateTwoPortResponse) GetResult() *SParams {
	if x != nil {
		return x.Result
	}
	return nil
}

type CalibrateOnePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frequency []float64  `protobuf:"fixed64,1,rep,packed,name=frequency,proto3" json:"frequency,omitempty"`
	Short     []*Complex `protobuf:"bytes,2,rep,name=short,proto3" json:"short,omitempty"`
	Open      []*Complex `protobuf:"bytes,3,rep,name=open,proto3" json:"open,omitempty"`
	Load      []*Complex `protobuf:"bytes,4,rep,name=load,proto3" json:"load,omitempty"`
	Thru      []*Complex `protobuf:"bytes,5,rep,name=thru,proto3" json:"thru,omitempty"`
	Dut       []*Complex `protobuf:"bytes,6,rep,name=dut,proto3" json:"dut,omitempty"`
}

func (x *CalibrateOnePortRequest) Reset() {
	*x = CalibrateOnePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calibrate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalibrateOnePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalibrateOnePortRequest) ProtoMessage() {}

func (x *CalibrateOnePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calibrate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalibrateOnePortRequest.ProtoReflect.Descriptor instead.
func (*CalibrateOnePortRequest) Descriptor() ([]byte, []int) {
	return file_calibrate_proto_rawDescGZIP(), []int{2}
}

func (x *CalibrateOnePortRequest) GetFrequency() []float64 {
	if x != nil {
		return x.Frequency
	}
	return nil
}

func (x *CalibrateOnePortRequest) GetShort() []*Complex {
	if x != nil {
		return x.Short
	}
	return nil
}

func (x *CalibrateOnePortRequest) GetOpen() []*Complex {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *CalibrateOnePortRequest) GetLoad() []*Complex {
	if x != nil {
		return x.Load
	}
	return nil
}

func (x *CalibrateOnePortRequest) GetThru() []*Complex {
	if x != nil {
		return x.Thru
	}
	return nil
}

func (x *CalibrateOnePortRequest) GetDut() []*Complex {
	if x != nil {
		return x.Dut
	}
	return nil
}

type CalibrateTwoPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frequency []float64 `protobuf:"fixed64,1,rep,packed,name=frequency,proto3" json:"frequency,omitempty"`
	Short     *SParams  `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	Open      *SParams  `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	Load      *SParams  `protobuf:"bytes,4,opt,name=load,proto3" json:"load,omitempty"`
	Thru      *SParams  `protobuf:"bytes,5,opt,name=thru,proto3" json:"thru,omitempty"`
	Dut       *SParams  `protobuf:"bytes,6,opt,name=dut,proto3" json:"dut,omitempty"`
}

func (x *CalibrateTwoPortRequest) Reset() {
	*x = CalibrateTwoPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calibrate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalibrateTwoPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalibrateTwoPortRequest) ProtoMessage() {}

func (x *CalibrateTwoPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calibrate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalibrateTwoPortRequest.ProtoReflect.Descriptor instead.
func (*CalibrateTwoPortRequest) Descriptor() ([]byte, []int) {
	return file_calibrate_proto_rawDescGZIP(), []int{3}
}

func (x *CalibrateTwoPortRequest) GetFrequency() []float64 {
	if x != nil {
		return x.Frequency
	}
	return nil
}

func (x *CalibrateTwoPortRequest) GetShort() *SParams {
	if x != nil {
		return x.Short
	}
	return nil
}

func (x *CalibrateTwoPortRequest) GetOpen() *SParams {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *CalibrateTwoPortRequest) GetLoad() *SParams {
	if x != nil {
		return x.Load
	}
	return nil
}

func (x *CalibrateTwoPortRequest) GetThru() *SParams {
	if x != nil {
		return x.Thru
	}
	return nil
}

func (x *CalibrateTwoPortRequest) GetDut() *SParams {
	if x != nil {
		return x.Dut
	}
	return nil
}

type SParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S11 []*Complex `protobuf:"bytes,1,rep,name=s11,proto3" json:"s11,omitempty"`
	S12 []*Complex `protobuf:"bytes,2,rep,name=s12,proto3" json:"s12,omitempty"`
	S21 []*Complex `protobuf:"bytes,3,rep,name=s21,proto3" json:"s21,omitempty"`
	S22 []*Complex `protobuf:"bytes,4,rep,name=s22,proto3" json:"s22,omitempty"`
}

func (x *SParams) Reset() {
	*x = SParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calibrate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SParams) ProtoMessage() {}

func (x *SParams) ProtoReflect() protoreflect.Message {
	mi := &file_calibrate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SParams.ProtoReflect.Descriptor instead.
func (*SParams) Descriptor() ([]byte, []int) {
	return file_calibrate_proto_rawDescGZIP(), []int{4}
}

func (x *SParams) GetS11() []*Complex {
	if x != nil {
		return x.S11
	}
	return nil
}

func (x *SParams) GetS12() []*Complex {
	if x != nil {
		return x.S12
	}
	return nil
}

func (x *SParams) GetS21() []*Complex {
	if x != nil {
		return x.S21
	}
	return nil
}

func (x *SParams) GetS22() []*Complex {
	if x != nil {
		return x.S22
	}
	return nil
}

type Complex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imag float64 `protobuf:"fixed64,1,opt,name=imag,proto3" json:"imag,omitempty"`
	Real float64 `protobuf:"fixed64,2,opt,name=real,proto3" json:"real,omitempty"`
}

func (x *Complex) Reset() {
	*x = Complex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calibrate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complex) ProtoMessage() {}

func (x *Complex) ProtoReflect() protoreflect.Message {
	mi := &file_calibrate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complex.ProtoReflect.Descriptor instead.
func (*Complex) Descriptor() ([]byte, []int) {
	return file_calibrate_proto_rawDescGZIP(), []int{5}
}

func (x *Complex) GetImag() float64 {
	if x != nil {
		return x.Imag
	}
	return 0
}

func (x *Complex) GetReal() float64 {
	if x != nil {
		return x.Real
	}
	return 0
}

var File_calibrate_proto protoreflect.FileDescriptor

var file_calibrate_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x5d, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x23, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x5d, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a,
	0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x04, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x68, 0x72, 0x75, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x04, 0x74,
	0x68, 0x72, 0x75, 0x12, 0x1d, 0x0a, 0x03, 0x64, 0x75, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x03, 0x64,
	0x75, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65,
	0x54, 0x77, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x05,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12,
	0x1f, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x68, 0x72, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x74, 0x68,
	0x72, 0x75, 0x12, 0x1d, 0x0a, 0x03, 0x64, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x03, 0x64, 0x75,
	0x74, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a,
	0x03, 0x73, 0x31, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x03, 0x73, 0x31, 0x31, 0x12, 0x1d, 0x0a, 0x03,
	0x73, 0x31, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x03, 0x73, 0x31, 0x32, 0x12, 0x1d, 0x0a, 0x03, 0x73,
	0x32, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x03, 0x73, 0x32, 0x31, 0x12, 0x1d, 0x0a, 0x03, 0x73, 0x32,
	0x32, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x52, 0x03, 0x73, 0x32, 0x32, 0x22, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x69, 0x6d, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x32, 0xad, 0x01, 0x0a,
	0x09, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x61,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x43,
	0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x54, 0x77, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x6f, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x54, 0x77, 0x6f, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2d, 0x76, 0x6e, 0x61, 0x2d,
	0x74, 0x77, 0x6f, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calibrate_proto_rawDescOnce sync.Once
	file_calibrate_proto_rawDescData = file_calibrate_proto_rawDesc
)

func file_calibrate_proto_rawDescGZIP() []byte {
	file_calibrate_proto_rawDescOnce.Do(func() {
		file_calibrate_proto_rawDescData = protoimpl.X.CompressGZIP(file_calibrate_proto_rawDescData)
	})
	return file_calibrate_proto_rawDescData
}

var file_calibrate_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_calibrate_proto_goTypes = []interface{}{
	(*CalibrateOnePortResponse)(nil), // 0: pb.CalibrateOnePortResponse
	(*CalibrateTwoPortResponse)(nil), // 1: pb.CalibrateTwoPortResponse
	(*CalibrateOnePortRequest)(nil),  // 2: pb.CalibrateOnePortRequest
	(*CalibrateTwoPortRequest)(nil),  // 3: pb.CalibrateTwoPortRequest
	(*SParams)(nil),                  // 4: pb.SParams
	(*Complex)(nil),                  // 5: pb.Complex
}
var file_calibrate_proto_depIdxs = []int32{
	5,  // 0: pb.CalibrateOnePortResponse.result:type_name -> pb.Complex
	4,  // 1: pb.CalibrateTwoPortResponse.result:type_name -> pb.SParams
	5,  // 2: pb.CalibrateOnePortRequest.short:type_name -> pb.Complex
	5,  // 3: pb.CalibrateOnePortRequest.open:type_name -> pb.Complex
	5,  // 4: pb.CalibrateOnePortRequest.load:type_name -> pb.Complex
	5,  // 5: pb.CalibrateOnePortRequest.thru:type_name -> pb.Complex
	5,  // 6: pb.CalibrateOnePortRequest.dut:type_name -> pb.Complex
	4,  // 7: pb.CalibrateTwoPortRequest.short:type_name -> pb.SParams
	4,  // 8: pb.CalibrateTwoPortRequest.open:type_name -> pb.SParams
	4,  // 9: pb.CalibrateTwoPortRequest.load:type_name -> pb.SParams
	4,  // 10: pb.CalibrateTwoPortRequest.thru:type_name -> pb.SParams
	4,  // 11: pb.CalibrateTwoPortRequest.dut:type_name -> pb.SParams
	5,  // 12: pb.SParams.s11:type_name -> pb.Complex
	5,  // 13: pb.SParams.s12:type_name -> pb.Complex
	5,  // 14: pb.SParams.s21:type_name -> pb.Complex
	5,  // 15: pb.SParams.s22:type_name -> pb.Complex
	2,  // 16: pb.Calibrate.CalibrateOnePort:input_type -> pb.CalibrateOnePortRequest
	3,  // 17: pb.Calibrate.CalibrateTwoPort:input_type -> pb.CalibrateTwoPortRequest
	0,  // 18: pb.Calibrate.CalibrateOnePort:output_type -> pb.CalibrateOnePortResponse
	1,  // 19: pb.Calibrate.CalibrateTwoPort:output_type -> pb.CalibrateTwoPortResponse
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_calibrate_proto_init() }
func file_calibrate_proto_init() {
	if File_calibrate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calibrate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalibrateOnePortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calibrate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalibrateTwoPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calibrate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalibrateOnePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calibrate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalibrateTwoPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calibrate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calibrate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calibrate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calibrate_proto_goTypes,
		DependencyIndexes: file_calibrate_proto_depIdxs,
		MessageInfos:      file_calibrate_proto_msgTypes,
	}.Build()
	File_calibrate_proto = out.File
	file_calibrate_proto_rawDesc = nil
	file_calibrate_proto_goTypes = nil
	file_calibrate_proto_depIdxs = nil
}
